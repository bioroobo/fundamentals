# массивы (тип List)

# Массив – контейнер элементов одного типа.
# A1000=[0]*1000 #создание списка (массива) размером 1000 с именем A1000

A = [2, 3, 4] # 2, 3, 4 - это объекты
print(A, 'инициализация')
for x in A :
    x += 1
    # x - это имя-ссылки на один из объектов списка и в следующей итерации она поменяется,
    # а объект остается в данном алгоритме неизменным
    # x = x + 1  -- в данном случае: значению объекта x присваивается значение объекта 1
    #               и полученное значение заносится в НОВЫЙ объект, ссылка на который
    #               связывается с x, поэтому значения в списке остаются неизменными
print(A, 'после изменения перебором x in A, значения объектов List НЕ изменились' )

for i in range(3) :
    A[i] *= A[i] # первый элемент это A[0]. Индексы с НУЛЯ.
print(A, 'после изменения перебором индексов i списка A. A[0] это уже само значение объекта из List' )


print('\nKопирование массива:')
N = int(input('введите размер массива:'))
A = [0] * N
B = [0] * N
print('array A:', A)
print('array B:', B)
for i in range(N) :
    A[i] = int(input('введите значение массива:'))
print('array A after init:', A)
for i in range(N) :
    B[i] = A[i]
print('array B after copy:', B)
C=A # create referent on A, not new object C (создает не новый объект и ссылку C на него,
    # а ещё одну ссылку C на объект, на который ссылается A)
A[0]=777
print('массив C после присвоения A[0]=777:', C)
print('Но:')
y=1
x=y
y+=1
print( """y=1
x=y
y+=1""")
print('Результат: y=',y,'x=',x)
print('Конструктор создания нового списка c копированием значений из заданного: D = list(A)')
D = list(A)
A[0]=888
print('массив D после присвоения A[0]=888:', D)
print()


